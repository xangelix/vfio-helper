---
# tasks file for iommu-setup
#TODO:- name: Check architecture
#TODO:- name: Check distribution

- name: Install util-linux
  pacman:
    name: util-linux

- name: Install pciutils
  pacman:
    name: pciutils

- name: Install grep
  pacman:
    name: grep

- name: Install python3
  pacman:
    name: python3

- name: Check CPU vendor
  shell: "python3 {{ role_path }}/files/cpu-vendor-parser.py '{{ ansible_processor[1] }}'"
  register: cpu_vendor

- name: Print CPU vendor
  debug:
    msg: "{{ cpu_vendor.stdout }}"

- name: Check for IOMMU support for AMD
  when: cpu_vendor.stdout == "AMD"
  shell: "dmesg | grep 'AMD-Vi'"

- name: Check for IOMMU support for Intel
  when: cpu_vendor.stdout == "INTEL"
  shell: "dmesg | grep 'Virtualization Technology for Directed I/O'"

#TODO: On fail add to grub, prompt or bios SVM/iommu enable

- name: Look for attached VGA
  shell: "lspci -knn | grep VGA"
  register: lspci_knn_vga

- name: Print lspci output
  debug:
    msg: "{{ lspci_knn_vga.stdout }}"

- name: Parse lscpi output
  shell: "python3 {{ role_path }}/files/lspci-parser.py '{{ lspci_knn_vga.stdout }}'"
  register: vga_main_buses

- name: Print main vga buses
  debug:
    msg: "{{ vga_main_buses.stdout_lines }}"

- name: Verify two or more VGA buses    
  debug:
    msg: "{{ vga_main_buses.stdout_lines|length }} VGA buses detected"
  failed_when: vga_main_buses.stdout_lines|length < 2

- pause:
    prompt: "Please select a passthrough vga bus"
  register: vga_bus_passthrough

- name: Print main vga IDs SXX
  debug:
    msg: "{{ vga_main_buses.stdout_lines[vga_bus_passthrough.user_input|int] }}"

#TODO: loop set remaining to host

- pause:
    prompt: "Please select a host vga bus"
  register: vga_bus_host

- name: Print main vga IDs SXX
  debug:
    msg: "{{ vga_main_buses.stdout_lines[vga_bus_host.user_input|int] }}"

- name: Find IOMMU groups
  shell: "find /sys/kernel/iommu_groups/ -type l"
  register: iommu_groups

- name: Parse IOMMU groups
  shell: "python3 {{ role_path }}/files/iommu-parser.py '{{ iommu_groups.stdout }}' '{{ lspci_knn_vga.stdout }}' '0e:00.0'"
  register: vga_iommu_groups

- name: Print VGA IOMMU groups
  debug:
    msg: "{{ vga_iommu_groups.stdout_lines }}"

#TODO: Collision detection is flawed

- name: Verify no IOMMU group collision   
  debug:
    msg: "{{ vga_iommu_groups.stdout_lines[vga_iommu_groups.stdout_lines|length]  }} no collision detected."
  failed_when: vga_iommu_groups.stdout_lines[vga_iommu_groups.stdout_lines|length]  == False

#TODO: USB passthrough selection, mouse and keyboard especially
